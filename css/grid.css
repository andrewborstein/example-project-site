/*
  Keep my container the same size when I add a border or padding.
  Push my content inwards, as opposed to expanding my container outwards.
*/
*, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/*
  A container holds all elements and controls the pageâ€™s maximum width.
  Using a container will make designing for responsive easier!
*/
.container {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1280px
}
.container-fluid {
  max-width: none;
}


/*
  Rows hold our columns to prevent other elements from stacking next to them, otherwise known as clearing issues.
  They are cleared using the popular "clearfix hack".
*/
.row {
  margin-right: -15px;
  margin-left: -15px;
  *zoom: 1;
}
.row:before,
.row:after {
  content: " ";
  display: table;
}
.row:after {
  clear: both;
}

/*
  Use float to line up our grid elements next to each other.
  Add padding by default.
*/
.column {
  float: left;
  padding-left: 5%;
  padding-right: 5%;
}

/*
  Enable a grid without padding between elements.
*/
.row.no-padding .column {
  padding-left: 0;
  padding-right: 0;
}

/*
  On all desktops, make a grid layout with different width columns.
*/
.column.full-width { width: 100%; }
.column.three-fourths { width: 75%; }
.column.two-thirds { width: 66.7%; }
.column.one-half { width: 50%; }
.column.one-third { width: 33.3%; }
.column.one-fourth { width: 25%; }
.column.one-sixth { width: 16.6%; }

/*
  Offset a grid element, by (virutally) creating an empty one.
*/
.column.offset-three-fourths { margin-left: 75%; }
.column.offset-two-thirds { margin-left: 66.7%; }
.column.offset-one-half { margin-left: 50%; }
.column.offset-one-third { margin-left: 33.3%; }
.column.offset-one-fourth { margin-left: 25%; }
.column.offset-one-sixth { margin-left: 16.6%; }

/*
  Add this to columns where you want content on the right on desktop to be at the top on mobile.
*/
.column.flow-opposite { float: right; }

/*
  On all tablet/mobile devices, make all columns 100% wide.
*/
@media (max-width: 1024px) {
  .column.full-width { width: 100%; }
}
